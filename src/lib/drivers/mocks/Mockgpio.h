/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKGPIO_H
#define _MOCKGPIO_H

#include "unity.h"
#include "gpio.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void Mockgpio_Init(void);
void Mockgpio_Destroy(void);
void Mockgpio_Verify(void);




#define gpio_set_pin_Expect(base, port, pin) gpio_set_pin_CMockExpect(__LINE__, base, port, pin)
void gpio_set_pin_CMockExpect(UNITY_LINE_TYPE cmock_line, GPIO base, gpio_port_t port, gpio_pin_t pin);
#define gpio_reset_pin_Expect(base, port, pin) gpio_reset_pin_CMockExpect(__LINE__, base, port, pin)
void gpio_reset_pin_CMockExpect(UNITY_LINE_TYPE cmock_line, GPIO base, gpio_port_t port, gpio_pin_t pin);
#define gpio_read_port_ExpectAndReturn(base, port, cmock_retval) gpio_read_port_CMockExpectAndReturn(__LINE__, base, port, cmock_retval)
void gpio_read_port_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, GPIO base, gpio_port_t port, uint32_t cmock_to_return);
#define gpio_read_pin_ExpectAndReturn(base, port, pin, cmock_retval) gpio_read_pin_CMockExpectAndReturn(__LINE__, base, port, pin, cmock_retval)
void gpio_read_pin_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, GPIO base, gpio_port_t port, gpio_pin_t pin, uint8_t cmock_to_return);
#define gpio_write_port_Expect(base, port, value) gpio_write_port_CMockExpect(__LINE__, base, port, value)
void gpio_write_port_CMockExpect(UNITY_LINE_TYPE cmock_line, GPIO base, gpio_port_t port, uint32_t value);
#define gpio_toggle_Expect(base, port, pin) gpio_toggle_CMockExpect(__LINE__, base, port, pin)
void gpio_toggle_CMockExpect(UNITY_LINE_TYPE cmock_line, GPIO base, gpio_port_t port, gpio_pin_t pin);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
